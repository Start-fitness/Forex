{"ast":null,"code":"import _assertThisInitialized from \"E:/temporary_project/Forex/Forex/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/temporary_project/Forex/Forex/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/temporary_project/Forex/Forex/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"E:/temporary_project/Forex/Forex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/temporary_project/Forex/Forex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function buffer(closingNotifier) {\n  return function bufferOperatorFunction(source) {\n    return source.lift(new BufferOperator(closingNotifier));\n  };\n}\n\nvar BufferOperator = /*#__PURE__*/function () {\n  function BufferOperator(closingNotifier) {\n    _classCallCheck(this, BufferOperator);\n\n    this.closingNotifier = closingNotifier;\n  }\n\n  _createClass(BufferOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    }\n  }]);\n\n  return BufferOperator;\n}();\n\nvar BufferSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(BufferSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(BufferSubscriber);\n\n  function BufferSubscriber(destination, closingNotifier) {\n    var _this;\n\n    _classCallCheck(this, BufferSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.buffer = [];\n\n    _this.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(_assertThisInitialized(_this))));\n\n    return _this;\n  }\n\n  _createClass(BufferSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.buffer.push(value);\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      var buffer = this.buffer;\n      this.buffer = [];\n      this.destination.next(buffer);\n    }\n  }]);\n\n  return BufferSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/buffer.ts"],"names":[],"mappings":";;;;;AAIA,SAAS,qBAAT,EAAgC,cAAhC,EAAgD,qBAAhD,QAA6E,mBAA7E;AA0CA,OAAM,SAAU,MAAV,CAAoB,eAApB,EAAoD;AACxD,SAAO,SAAS,sBAAT,CAAgC,MAAhC,EAAqD;AAC1D,WAAO,MAAM,CAAC,IAAP,CAAY,IAAI,cAAJ,CAAsB,eAAtB,CAAZ,CAAP;AACD,GAFD;AAGD;;IAEK,c;AAEJ,0BAAoB,eAApB,EAAoD;AAAA;;AAAhC,SAAA,eAAA,GAAA,eAAA;AACnB;;;;WAED,cAAK,UAAL,EAAkC,MAAlC,EAA6C;AAC3C,aAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,gBAAJ,CAAqB,UAArB,EAAiC,KAAK,eAAtC,CAAjB,CAAP;AACD;;;;;;IAQG,gB;;;;;AAGJ,4BAAY,WAAZ,EAA0C,eAA1C,EAA0E;AAAA;;AAAA;;AACxE,8BAAM,WAAN;AAHM,UAAA,MAAA,GAAc,EAAd;;AAIN,UAAK,GAAL,CAAS,cAAc,CAAC,eAAD,EAAkB,IAAI,qBAAJ,+BAAlB,CAAvB;;AAFwE;AAGzE;;;;WAES,eAAM,KAAN,EAAc;AACtB,WAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACD;;;WAED,sBAAU;AACR,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,WAAK,MAAL,GAAc,EAAd;AACA,WAAK,WAAL,CAAiB,IAAjB,CAAuB,MAAvB;AACD;;;;EAhB+B,qB","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\r\nexport function buffer(closingNotifier) {\r\n    return function bufferOperatorFunction(source) {\r\n        return source.lift(new BufferOperator(closingNotifier));\r\n    };\r\n}\r\nclass BufferOperator {\r\n    constructor(closingNotifier) {\r\n        this.closingNotifier = closingNotifier;\r\n    }\r\n    call(subscriber, source) {\r\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\r\n    }\r\n}\r\nclass BufferSubscriber extends SimpleOuterSubscriber {\r\n    constructor(destination, closingNotifier) {\r\n        super(destination);\r\n        this.buffer = [];\r\n        this.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\r\n    }\r\n    _next(value) {\r\n        this.buffer.push(value);\r\n    }\r\n    notifyNext() {\r\n        const buffer = this.buffer;\r\n        this.buffer = [];\r\n        this.destination.next(buffer);\r\n    }\r\n}\r\n//# sourceMappingURL=buffer.js.map"]},"metadata":{},"sourceType":"module"}